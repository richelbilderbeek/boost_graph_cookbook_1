#include <vector>
#include "create_direct_neighbour_subgraph.h"

template <typename graph>
std::vector<graph> create_all_direct_neighbour_subgraphs(
  const graph& g
) noexcept
{
  using vd = typename graph::vertex_descriptor;

  std::vector<graph> v(boost::num_vertices(g));
  const auto vip = vertices(g);
  std::transform(
    vip.first, vip.second,
    std::begin(v),
    [&g](const vd& d)
    {
      return create_direct_neighbour_subgraph(
        d, g
      );
    }
  );
  return v;
}
